var linkifyRegisterKeywords=function(n){"use strict";const t=n.createTokenClass("keyword",{isLink:!0}),e={numeric:[],ascii:[],asciinumeric:[],alpha:[],alphanumeric:[],domain:[],keyword:[]},i=/\p{L}/gu,o=/\p{Emoji}/gu,r=/\ufe0f/g;function s(n,t){t.indexOf(n)<0&&t.push(n)}function c(n,t){const e=n.match(t);return e?e.length:0}return n.registerTokenPlugin("keyword",(function(t){let{scanner:i}=t;for(const t in e){const o=e[t];for(let e=0;e<o.length;e++){const r=n.stringToArray(o[e]);i.start.ts(r,o[e],{keyword:!0,[t]:!0})}}})),n.registerPlugin("keyword",(function(n){let{scanner:e,parser:i}=n;const o=e.tokens.groups.keyword;o&&o.length>0&&i.start.ta(o,t)})),function(n){for(let t=0;t<n.length;t++){const e=n[t];if("string"!=typeof e||!e)throw new Error(`linkify-plugin-keyword: Invalid keyword: ${e}`)}for(let t=0;t<n.length;t++){const a=n[t].toLowerCase();if(/^[0-9]+$/.test(a)){s(a,e.numeric);continue}if(/^[a-z]+$/.test(a)){s(a,e.ascii);continue}if(/^[0-9a-z]+$/.test(a)){s(a,e.asciinumeric);continue}const u=c(a,i);if(u===a.length){s(a,e.alpha);continue}const l=c(a,/[0-9]/g);if(u+l===a.length){s(a,e.alphanumeric);continue}u+l+(c(a,o)+c(a,r))+c(a,/-/g)!==a.length||/(^-|-$|--)/.test(a)?s(a,e.keyword):s(a,e.domain)}}}(linkify);
